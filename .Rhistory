StepsperDay <- data.frame(date=integer(), steps=integer())
for (i in 1:length(unique(data$date))){
cachedata <- subset(data, date==unique(data$date)[i])
StepsperDay[i,1] <-unique(data$date)[i]
StepsperDay[i,2] <-sum(cachedata$steps)
}
View(StepsperDay)
StepsperDay$date <- as.Date(StepsperDay$date)
StepsperDay <- data.frame(date=factor(), steps=integer())
for (i in 1:length(unique(data$date))){
cachedata <- subset(data, date==unique(data$date)[i])
StepsperDay[i,1] <-unique(data$date)[i]
StepsperDay[i,2] <-sum(cachedata$steps)
}
StepsperDay <- data.frame(date=double(), steps=integer())
for (i in 1:length(unique(data$date))){
cachedata <- subset(data, date==unique(data$date)[i])
StepsperDay[i,1] <-unique(data$date)[i]
StepsperDay[i,2] <-sum(cachedata$steps)
}
View(StepsperDay)
unique(data$date)
unique(data$date)[1]
data <- read.csv(unz("activity.zip","activity.csv"), colClasses = c("numeric","Date","numeric"))
for (i in 1:length(unique(data$date))){
cachedata <- subset(data, date==unique(data$date)[i])
StepsperDay[i,1] <-unique(data$date)[i]
StepsperDay[i,2] <-sum(cachedata$steps)
}
StepsperDay <- data.frame(date=as.Date(character()),steps=integer())
for (i in 1:length(unique(data$date))){
cachedata <- subset(data, date==unique(data$date)[i])
StepsperDay[i,1] <-unique(data$date)[i]
StepsperDay[i,2] <-sum(cachedata$steps)
}
View(StepsperDay)
plot(StepsperDay$date,StepsperDay$steps, type="h", xlab="Date", ylab="Steps")
mean(StepsperDay$steps)
median(StepsperDay$steps)
summary(StepsperDay$steps)
mean(StepsperDay$steps,na.rm=T)
median(StepsperDay$steps,na.rm=T)
mean <- mean(StepsperDay$steps,na.rm=T)
median <- median(StepsperDay$steps,na.rm=T)
mean <- round(mean(StepsperDay$steps,na.rm=T), digits = 0)
median <- round(median(StepsperDay$steps,na.rm=T), digits=0)
unique(data$interval)
StepsperInterval <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(data$interval))){
cachedata <- subset(data, date==unique(data$interval)[i])
StepsperInterval[i,1] <-unique(data$interval)[i]
StepsperInterval[i,2] <-mean(cachedata$steps)
}
View(StepsperInterval)
plot(StepsperInterval$interval,StepsperInterval$steps, type="l",
xlab="Interval", ylab="Steps")
cachedata <- subset(data, date==unique(data$interval)[154])
unique(data$interval)[154]
cachedata <- subset(data, date==unique(data$interval)[154])
StepsperInterval <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(data$interval))){
cachedata <- subset(data, interval==unique(data$interval)[i])
StepsperInterval[i,1] <-unique(data$interval)[i]
StepsperInterval[i,2] <-mean(cachedata$steps)
}
plot(StepsperInterval$interval,StepsperInterval$steps, type="l",
xlab="Interval", ylab="Steps")
cachedata <- subset(data, interval==unique(data$interval)[154])
i <- 154
cachedata <- subset(data, interval==unique(data$interval)[i])
StepsperInterval <- data.frame(interval = integer(),steps=integer())
i <- 154
cachedata <- subset(data, interval==unique(data$interval)[i])
StepsperInterval[i,1] <-unique(data$interval)[i]
StepsperInterval[i,2] <-mean(cachedata$steps)
View(StepsperInterval)
mean(cachedata$steps)
mean(cachedata$steps, na.rm=T)
StepsperInterval <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(data$interval))){
cachedata <- subset(data, interval==unique(data$interval)[i])
StepsperInterval[i,1] <-unique(data$interval)[i]
StepsperInterval[i,2] <-mean(cachedata$steps, na.rm=T)
}
plot(StepsperInterval$interval,StepsperInterval$steps, type="l",
xlab="Interval", ylab="Steps")
max(StepsperInterval$steps)
order(StepsperInterval$steps)
maxInterval <- StepsperIntreval[order(StepsperInterval$steps),]
maxInterval <- StepsperInterva[order(StepsperInterval$steps),]
maxInterval <- StepsperInterval[order(StepsperInterval$steps),]
View(maxInterval)
maxInterval <- StepsperInterval[order(-StepsperInterval$steps),]
View(maxInterval)
maxInterval <- maxInterval[1,1]
mean <- round(mean(StepsperDay$steps,na.rm=T), digits = 0)
median <- round(median(StepsperDay$steps,na.rm=T), digits=0)
rypeof(mean)
typeof(mean)
mean <- as.numeric(round(mean(StepsperDay$steps,na.rm=T), digits = 0))
typeof(mean)
mean <- as.numeric(round(mean(StepsperDay$steps,na.rm=T), digits = 0))
meanSteps <- as.numeric(round(mean(StepsperDay$steps,na.rm=T), digits = 0))
meanSteps
sum(is.na(data))
sumNA <- sum(is.na(data))
View(StepsperDay)
View(StepsperDay)
View(StepsperInterval)
is.na(data[1,])
is.na(data[1])
is.na(data[1,])
is.na(data)
data$NA <- is.na(data)
data$isNA <- is.na(data)
View(data)
summary(data$isNA)
sumNA <- sum(is.na(data))
newData <- data
View(StepsperInterval)
newData <- data
for (i in 1:length((data))){
if (data[i,4]==T){
cachedata <- subset(StepsperInterval, Interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
for (i in 1:length((data))){
if (data[i,4]== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
sum(is.na(newData))
View(newData)
setwd("C:/Users/Antonio/Dropbox/Universidade/Data Scientist Toolbox/Reproducible Research/Week2/Assignment/RepData_PeerAssessment1")
data <- read.csv(unz("activity.zip","activity.csv"), colClasses = c("numeric","Date","numeric"))
#to process data
StepsperDay <- data.frame(date=as.Date(character()),steps=integer())
for (i in 1:length(unique(data$date))){
cachedata <- subset(data, date==unique(data$date)[i])
StepsperDay[i,1] <-unique(data$date)[i]
StepsperDay[i,2] <-sum(cachedata$steps)
}
StepsperInterval <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(data$interval))){
cachedata <- subset(data, interval==unique(data$interval)[i])
StepsperInterval[i,1] <-unique(data$interval)[i]
StepsperInterval[i,2] <-mean(cachedata$steps, na.rm=T)
}
#to plot day averages
plot(StepsperDay$date,StepsperDay$steps, type="h", xlab="Date", ylab="Steps")
meanSteps <- as.numeric(round(mean(StepsperDay$steps,na.rm=T), digits = 0))
median <- round(median(StepsperDay$steps,na.rm=T), digits=0)
#to plot interval averages
plot(StepsperInterval$interval,StepsperInterval$steps, type="l",
xlab="Interval", ylab="Steps")
maxInterval <- StepsperInterval[order(-StepsperInterval$steps),]
maxInterval <- maxInterval[1,1]
#to get NA and recalculate them
sumNA <- sum(is.na(data))
newData <- data
for (i in 1:length((data))){
if (is.na(data[i])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
is.na(data[2])
for (i in 1:length((data))){
if (is.na(data[i,])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
is.na(data[2,]
if (is.na(data[2,])== T){
is.na(data[2,])
for (i in 1:length((data))){
if (is.na(data[i,1])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
sum(is.na(newData))
newData <- data
for (i in 1:length((data))){
if (is.na(data[i,1])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
i=1
i<-1
if (is.na(data[i,1])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
View(newData)
View(newData)
}
rm(newData)
newData <- data
sum(is.na(newData))
i<-1
if (is.na(data[i,1])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
sum(is.na(newData))
for (i in 1:length((data))){
if (is.na(data[i,1])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
sum(is.na(newData))
for (i in 1:length(data)){
if (is.na(data[i,1])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
sum(is.na(newData))
length(data)
for (i in 1:length(data$steps)){
if (is.na(data[i,1])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
sum(is.na(newData))
StepsperDayNA <- data.frame(date=as.Date(character()),steps=integer())
for (i in 1:length(unique(newData$date))){
cachedata <- subset(newData, date==unique(newData$date)[i])
StepsperDayNA[i,1] <-unique(newData$date)[i]
StepsperDayNA[i,2] <-sum(cachedata$steps)
}
plot(StepsperDayNA$date,StepsperDayNA$steps, type="h", xlab="Date", ylab="Steps")
meanStepsNA <- mean(StepsperDayNA$steps,na.rm=T)
medianStepsNA <- round(median(StepsperDayNA$steps,na.rm=T), digits=0)
meanStepsNA <- as.numeric(round(mean(StepsperDayNA$steps,na.rm=T), digits = 0))
summary(StepsperDay$steps)
summary(StepsperDayNA$steps)
plot(StepsperDayNA$date,StepsperDayNA$steps, type="h", xlab="Date", ylab="Steps")
lines(StepsperDayNA$date,StepsperDay$steps)
library(ggplot2)
ggplot(StepsperDay$date,StepsperDay$steps, type="h", xlab="Date", ylab="Steps")
ggplot(StepsperDay, aes(date, steos) type="h", xlab="Date", ylab="Steps")
ggplot(StepsperDay, aes(date, steos), type="h", xlab="Date", ylab="Steps")
ggplot(StepsperDay, aes(date, steps), type="h", xlab="Date", ylab="Steps")
ggplot(StepsperDay, aes(date, steps))
ggplot(StepsperDay, aes(date, steps)+geom_histogram()
meanSteps <- as.numeric(round(mean(StepsperDay$steps,na.rm=T), digits = 0))
ggplot(StepsperDay, aes(x=date,y=steps)+geom_histogram()
meanSteps <- as.numeric(round(mean(StepsperDay$steps,na.rm=T), digits = 0))
ggplot(StepsperDay, aes(x=date,y=steps)
+geom_histogram()
meanSteps <- as.numeric(round(mean(StepsperDay$steps,na.rm=T), digits = 0))
ggplot(StepsperDay, aes(x=date,y=steps))
+geom_histogram()
ggplot(StepsperDay, aes(x=date,y=steps))
ggplot(StepsperDay, aes(x=date,y=steps))+geom_histogram()
View(StepsperDay)
ggplot(StepsperDay, aes(x=date,y=steps))+geom_line()
ggplot(StepsperDay, aes(x=date,y=steps))+geom_bar()
ggplot(StepsperDay, aes(x=date,y=steps))+geom_line()
plot(StepsperDay$date,StepsperDay$steps, type="h", xlab="Date", ylab="Steps")
lines(StepsperDayNA$date,StepsperDay$steps)
lines(StepsperDayNA$date,StepsperDay$steps, col="red")
weekdays(newData)
weekdays(newData$date)
newData$weekday <- weekdays(newData$date)
View(newData)
newData$weekday <- weekdays(newData$date, abbreviate = T)
View(newData)
unique(newData$weekday)
View(newData)
for (i in 1:nrow(newData)){
if (newData[i,4] == unique(newData$weekday)[6]|newData[i,4] == unique(newData$weekday)[7]){
newData$weekend[i] <- T
}
else{
newData$weekend[i] <- F
}
}
newData$weekend <- logical()
for (i in 1:nrow(newData)){
if (newData[i,4] == unique(newData$weekday)[6]|newData[i,4] == unique(newData$weekday)[7]){
newData$weekend[i] <- T
}
else{
newData$weekend[i] <- F
}
}
for (i in 1:nrow(newData)){
if (newData[i,4] == unique(newData$weekday)[6]|newData[i,4] == unique(newData$weekday)[7]){
newData$weekend[i] <- "weekend"
}
else{
newData$weekend[i] <- "weekday"
}
}
StepsperIntervalWeekend <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(newData$interval))){
cachedata <- subset(newData, interval==unique(newData$interval)[i] & weekend=="weekend")
StepsperIntervalWeekend[i,1] <-unique(newData$interval)[i]
StepsperIntervalWeekend[i,2] <-mean(cachedata$steps, na.rm=T)
}
StepsperIntervalWeekday <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(newData$interval))){
cachedata <- subset(newData, interval==unique(newData$interval)[i] & weekend=="weekday")
StepsperIntervalday[i,1] <-unique(newData$interval)[i]
StepsperIntervalday[i,2] <-mean(cachedata$steps, na.rm=T)
}
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekday$interval,StepsperIntervalWeekday$steps, type="l",
xlab="Interval", ylab="Steps")
View(StepsperIntervalWeekend)
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
data <- read.csv(unz("activity.zip","activity.csv"), colClasses = c("numeric","Date","numeric"))
#to process data
StepsperDay <- data.frame(date=as.Date(character()),steps=integer())
for (i in 1:length(unique(data$date))){
cachedata <- subset(data, date==unique(data$date)[i])
StepsperDay[i,1] <-unique(data$date)[i]
StepsperDay[i,2] <-sum(cachedata$steps)
}
StepsperInterval <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(data$interval))){
cachedata <- subset(data, interval==unique(data$interval)[i])
StepsperInterval[i,1] <-unique(data$interval)[i]
StepsperInterval[i,2] <-mean(cachedata$steps, na.rm=T)
}
#to plot day averages
plot(StepsperDay$date,StepsperDay$steps, type="h", xlab="Date", ylab="Steps")
meanSteps <- as.numeric(round(mean(StepsperDay$steps,na.rm=T), digits = 0))
median <- round(median(StepsperDay$steps,na.rm=T), digits=0)
#to plot interval averages
plot(StepsperInterval$interval,StepsperInterval$steps, type="l",
xlab="Interval", ylab="Steps")
maxInterval <- StepsperInterval[order(-StepsperInterval$steps),]
maxInterval <- maxInterval[1,1]
#to get NA and recalculate them
sumNA <- sum(is.na(data))
newData <- data
for (i in 1:length(data$steps)){
if (is.na(data[i,1])== T){
cachedata <- subset(StepsperInterval, interval == data[i,3])
newData[i,1] <- cachedata[1,2]
}
}
StepsperDayNA <- data.frame(date=as.Date(character()),steps=integer())
for (i in 1:length(unique(newData$date))){
cachedata <- subset(newData, date==unique(newData$date)[i])
StepsperDayNA[i,1] <-unique(newData$date)[i]
StepsperDayNA[i,2] <-sum(cachedata$steps)
}
plot(StepsperDayNA$date,StepsperDayNA$steps, type="h", xlab="Date", ylab="Steps")
lines(StepsperDayNA$date,StepsperDay$steps, col="red")
meanStepsNA <- as.character(round(mean(StepsperDayNA$steps,na.rm=T)))
medianStepsNA <- as.character(round(median(StepsperDayNA$steps,na.rm=T), digits=0))
#seperate weekends from the rest
newData$weekday <- weekdays(newData$date, abbreviate = T)
for (i in 1:nrow(newData)){
if (newData[i,4] == unique(newData$weekday)[6]|newData[i,4] == unique(newData$weekday)[7]){
newData$weekend[i] <- "weekend"
}
else{
newData$weekend[i] <- "weekday"
}
}
#plot
StepsperIntervalWeekend <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(newData$interval))){
cachedata <- subset(newData, interval==unique(newData$interval)[i] & weekend=="weekend")
StepsperIntervalWeekend[i,1] <-unique(newData$interval)[i]
StepsperIntervalWeekend[i,2] <-mean(cachedata$steps, na.rm=T)
}
StepsperIntervalWeekday <- data.frame(interval = integer(),steps=integer())
for (i in 1:length(unique(newData$interval))){
cachedata <- subset(newData, interval==unique(newData$interval)[i] & weekend=="weekday")
StepsperIntervalWeekday[i,1] <-unique(newData$interval)[i]
StepsperIntervalWeekday[i,2] <-mean(cachedata$steps, na.rm=T)
}
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekday$interval,StepsperIntervalWeekday$steps, type="l",
xlab="Interval", ylab="Steps")
par(mfrow=c(2,1))
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekday$interval,StepsperIntervalWeekday$steps, type="l",
xlab="Interval", ylab="Steps")
par(mfrow=c(2,1))
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekday$interval,StepsperIntervalWeekday$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekday$interval,StepsperIntervalWeekday$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekday$interval,StepsperIntervalWeekday$steps, type="l",
xlab="Interval", ylab="Steps")
par(mfrow=c(1,1))
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekday$interval,StepsperIntervalWeekday$steps, type="l",
xlab="Interval", ylab="Steps")
par(mfrow=c(1,2))
plot(StepsperIntervalWeekend$interval,StepsperIntervalWeekend$steps, type="l",
xlab="Interval", ylab="Steps")
plot(StepsperIntervalWeekday$interval,StepsperIntervalWeekday$steps, type="l",
xlab="Interval", ylab="Steps")
par(mfrow=c(1,1))
weekendplot <- xyplot(interval~steps, data=StepsperIntervalWeekend, type="l",
xlab="Interval", ylab="Steps", scales=free.y)
require(lattice)
weekendplot <- xyplot(interval~steps, data=StepsperIntervalWeekend, type="l",
xlab="Interval", ylab="Steps", scales=free.y)
weekendplot <- xyplot(interval~steps, data=StepsperIntervalWeekend, type="l",
xlab="Interval", ylab="Steps")
weekendplot
weekendplot <- xyplot(steps~interval, data=StepsperIntervalWeekend, type="l",
xlab="Interval", ylab="Steps")
weekendplot
weekendplot <- xyplot(steps~interval, data=StepsperIntervalWeekend, type="l",
xlab="Interval", ylab="Steps")
weekendplot
weekdayplot <- xyplot(steps~interval, data=StepsperIntervalWeekday, type="l",
xlab="Interval", ylab="Steps")
require(latticeExtra)
comb<-doubleYscale(weekendplot,weekdayplot)
e
require(latticeExtra)
comb<-doubleYscale(weekendplot,weekdayplot)
comb<-doubleYScale(weekendplot,weekdayplot)
comb
update(comb, layout=c(1,2))
par(mfrow=c(2,1))
weekendplot
weekdayplot
par(mfrow=c(2,1))
weekendplot
weekdayplot
StepsperIntervalWeekend <- rbind(StepsperIntervalWeekend,StepsperIntervalWeekday)
weekendplot <- xyplot(steps~interval|factor(weekend), data=StepsperIntervalWeekend, type="l",
xlab="Interval", ylab="Steps")
StepsperIntervalWeekend
tepsperIntervalWeekend <- data.frame(interval = integer(),steps=integer(),
weekend=character())
StepsperIntervalWeekend <- data.frame(interval = integer(),steps=integer(),
weekend=character())
StepsperIntervalWeekend <- data.frame(interval = integer(),steps=integer(),
weekend=character())
StepsperIntervalWeekday <- data.frame(interval = integer(),steps=integer(),
weekend=character())
StepsperIntervalWeekend <- data.frame(interval = integer(),steps=integer(),
weekend=character())
for (i in 1:length(unique(newData$interval))){
cachedata <- subset(newData, interval==unique(newData$interval)[i])
StepsperIntervalWeekend[i,1] <-unique(newData$interval)[i]
StepsperIntervalWeekend[i,2] <-mean(cachedata$steps, na.rm=T)
StepsperIntervalWeekend[i,3] <-"weekend"
}
StepsperIntervalWeekday <- data.frame(interval = integer(),steps=integer(),
weekend=character())
for (i in 1:length(unique(newData$interval))){
cachedata <- subset(newData, interval==unique(newData$interval)[i] & weekend=="weekday")
StepsperIntervalWeekday[i,1] <-unique(newData$interval)[i]
StepsperIntervalWeekday[i,2] <-mean(cachedata$steps, na.rm=T)
StepsperIntervalWeekday[i,3] <-"weekday"
}
StepsperIntervalWeekend <- rbind(StepsperIntervalWeekend,StepsperIntervalWeekday)
StepsperIntervalWeekend <- data.frame(interval = integer(),steps=integer(),
weekend=integer())
for (i in 1:length(unique(newData$interval))){
cachedata <- subset(newData, interval==unique(newData$interval)[i])
StepsperIntervalWeekend[i,1] <-unique(newData$interval)[i]
StepsperIntervalWeekend[i,2] <-mean(cachedata$steps, na.rm=T)
StepsperIntervalWeekend[i,3] <-"weekend"
}
StepsperIntervalWeekday <- data.frame(interval = integer(),steps=integer(),
weekend=integer())
for (i in 1:length(unique(newData$interval))){
cachedata <- subset(newData, interval==unique(newData$interval)[i] & weekend=="weekday")
StepsperIntervalWeekday[i,1] <-unique(newData$interval)[i]
StepsperIntervalWeekday[i,2] <-mean(cachedata$steps, na.rm=T)
StepsperIntervalWeekday[i,3] <-"weekday"
}
StepsperIntervalWeekend <- rbind(StepsperIntervalWeekend,StepsperIntervalWeekday)
weekendplot <- xyplot(steps~interval|factor(weekend), data=StepsperIntervalWeekend, type="l",
xlab="Interval", ylab="Steps")
weekendplot
png(filename = "/figure/plot.png")
weekendplot
dev.off()
png(filename = "~/figure/plot.png")
weekendplot
dev.off()
png(filename = "~/figure/plot.png")
weekendplot
dev.off()
png(filename = "~/figure/plot.png")
png(filename = "/figure/plot.png")
png(filename = "plot.png")
weekendplot
dev.off()
